//
//  CameraTranslatorInteractor.swift
//  TranslateAppArc
//
//  Created by PS Shortcut on 27/03/2019.
//  Copyright (c) 2019 Panagiotis Siapkaras. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CameraTranslatorBusinessLogic
{
  //func doSomething(request: CameraTranslator.Something.Request)
    func getLatestPhoto(for target : UIImageView)
    func detectText(for image:UIImage,detectionModel:DetectionModelType)
}

protocol CameraTranslatorDataStore
{
  //var name: String { get set }
}

class CameraTranslatorInteractor: CameraTranslatorBusinessLogic, CameraTranslatorDataStore
{
    
    
    
    
  var presenter: CameraTranslatorPresentationLogic?
  var worker: CameraTranslatorWorker?
  //var name: String = ""
  
  // MARK: Do something
  
    func getLatestPhoto(for target: UIImageView) {
        worker = CameraTranslatorWorker()
        worker?.getLatestImage(for: target, completion: { (image) in
            self.presenter?.presentLatestImage(image: image)
        })
    }
    
    func detectText(for image: UIImage,detectionModel:DetectionModelType) {
        worker = CameraTranslatorWorker()
        var image = image
        if detectionModel == .onDevice {
            if let imageRedused = image.resizeWithPercent(percentage: 0.7){
                image = imageRedused
            }
        }
        worker?.detectText(from: image, detectionModel: detectionModel, completion: { (detectedText, error) in
            if error != nil {
                self.presenter?.presentDetectedText(detectedText: nil, error: error)
            }else{
                self.presenter?.presentDetectedText(detectedText: detectedText, error: nil)
            }
        })
    }
    
    
//  func doSomething(request: CameraTranslator.Something.Request)
//  {
//    worker = CameraTranslatorWorker()
//    worker?.doSomeWork()
//
//    let response = CameraTranslator.Something.Response()
//    presenter?.presentSomething(response: response)
//  }
}
