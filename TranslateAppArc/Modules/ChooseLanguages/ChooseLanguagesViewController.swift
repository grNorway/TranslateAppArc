//
//  ChooseLanguagesViewController.swift
//  TranslateAppArc
//
//  Created by PS Shortcut on 22/03/2019.
//  Copyright (c) 2019 Panagiotis Siapkaras. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChooseLanguagesDisplayLogic: class
{
  //func displaySomething(viewModel: ChooseLanguages.Something.ViewModel)
    func displayLanguages(languages: [Language],error:Error?)
}

class ChooseLanguagesViewController: UIViewController, ChooseLanguagesDisplayLogic
{
  var interactor: ChooseLanguagesBusinessLogic?
  var router: (NSObjectProtocol & ChooseLanguagesRoutingLogic & ChooseLanguagesDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ChooseLanguagesInteractor()
    let presenter = ChooseLanguagesPresenter()
    let router = ChooseLanguagesRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
    
    //MARK: - Outlets
    
    @IBOutlet weak var fromChooseLangBtn: UIButton!
    @IBOutlet weak var toChooseLangBtn: UIButton!
    @IBOutlet weak var changeLangFromToBtn: UIButton!
    @IBOutlet weak var buttonLangViewContainer : UIView!
    
    
    @IBOutlet weak var fromTableView: UITableView!
    @IBOutlet weak var toTableView: UITableView!
    
    //MARK: - Properties
    var languages = [Language]()
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    interactor?.getLanguages()
  }
  
  // MARK: Do something
  
    
    func displayLanguages(languages: [Language], error: Error?) {
        guard error == nil else{
            //Present Alert Controller
            print("Error Getting the languages : \(String(describing: error?.localizedDescription))")
            return
        }
        
        self.languages = languages
        DispatchQueue.main.async {
            self.fromTableView.reloadData()
            self.toTableView.reloadData()
        }
        
    }
    
    //MARK: -Actions
    @IBAction func fromLanguageButton(_ sender: UIButton) {
        fromTableView.isHidden = false
        toTableView.isHidden = true
    }
    
    @IBAction func toLanguageButton(_ sender: UIButton) {
        fromTableView.isHidden = true
        toTableView.isHidden = false
    }
    
    
}

extension ChooseLanguagesViewController : UITableViewDelegate {
    
}

extension ChooseLanguagesViewController : UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return languages.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        if tableView == fromTableView {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "fromLanguageCell", for: indexPath)
        
        let languageName = languages[indexPath.row].name
        cell.textLabel?.text = languageName
        
            return cell
        
        }else { //toTableView
            let cell = tableView.dequeueReusableCell(withIdentifier: "toLanguageCell", for: indexPath)
            
            let languageName = languages[indexPath.row].name
            cell.textLabel?.text = languageName
            
            return cell
        }
        
        
    }
    
    
}
